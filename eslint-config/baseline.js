import eslint from '@eslint/js';
import importPlugin from 'eslint-plugin-import';

export default [
  eslint.configs.recommended,
  importPlugin.flatConfigs.recommended,
  {
    rules: {
      'accessor-pairs': 'error',
      'array-bracket-spacing': 'warn',
      'arrow-parens': ['error', 'as-needed'],
      'arrow-spacing': 'warn',
      'block-spacing': ['warn', 'never'],
      'brace-style': ['warn', '1tbs', {allowSingleLine: true}],
      'camelcase': 'error',
      'comma-spacing': 'warn',
      'comma-style': 'warn',
      'computed-property-spacing': 'warn',
      'curly': ['error', 'multi-line', 'consistent'],
      'dot-location': ['warn', 'property'],
      'dot-notation': 'warn',
      'eol-last': 'warn',
      'eqeqeq': 'error',
      'func-call-spacing': 'warn',
      'generator-star-spacing': 'warn',
      'import/no-cycle': ['error', {allowUnsafeDynamicCyclicDependency: true}],
      'indent': ['warn', 2, {
        SwitchCase: 1,
        MemberExpression: 'off',
        FunctionDeclaration: {parameters: 'off'},
        FunctionExpression: {parameters: 'off'},
        flatTernaryExpressions: true
      }],
      'key-spacing': ['warn', {mode: 'minimum'}],
      'keyword-spacing': 'warn',
      'linebreak-style': 'warn',
      'lines-between-class-members': ['warn', 'always', {exceptAfterSingleLine: true}],
      'max-len': ['warn', {code: 100, ignoreUrls: true, ignoreRegExpLiterals: true}],
      'new-cap': 'error',
      'new-parens': 'error',
      'no-alert': 'error',
      'no-array-constructor': 'error',
      'no-bitwise': 'error',
      'no-buffer-constructor': 'error',
      'no-caller': 'error',
      'no-console': 'off',
      'no-constant-binary-expression': 'error',
      'no-constant-condition': ['error', {checkLoops: false}],
      'no-duplicate-imports': 'error',
      'no-else-return': 'error',
      'no-empty-function': 'error',
      'no-eval': 'error',
      'no-extend-native': 'error',
      'no-extra-bind': 'error',
      'no-extra-label': 'error',
      'no-floating-decimal': 'error',
      'no-implicit-globals': 'error',
      'no-implied-eval': 'error',
      'no-invalid-this': 'error',
      'no-iterator': 'error',
      'no-lone-blocks': 'error',
      'no-lonely-if': 'error',
      'no-loop-func': 'error',
      'no-multi-spaces': ['warn', {ignoreEOLComments: true}],
      'no-multi-str': 'warn',
      'no-multiple-empty-lines': 'warn',
      'no-negated-condition': 'error',
      'no-new': 'error',
      'no-new-func': 'error',
      'no-new-object': 'error',
      'no-new-require': 'error',
      'no-new-wrappers': 'error',
      'no-octal-escape': 'error',
      'no-path-concat': 'error',
      'no-proto': 'error',
      'no-script-url': 'error',
      'no-self-compare': 'error',
      'no-sequences': 'error',
      'no-shadow': 'error',
      'no-tabs': 'warn',
      'no-template-curly-in-string': 'error',
      'no-throw-literal': 'error',
      'no-trailing-spaces': 'warn',
      'no-undef-init': 'error',
      'no-unexpected-multiline': 'off',
      'no-unmodified-loop-condition': 'error',
      'no-unneeded-ternary': 'error',
      'no-unused-expressions': 'error',
      'no-unused-vars': ['error', {args: 'none'}],
      'no-use-before-define': ['error', {functions: false}],
      'no-useless-call': 'error',
      'no-useless-computed-key': 'error',
      'no-useless-concat': 'error',
      'no-useless-constructor': 'error',
      'no-useless-rename': 'error',
      'no-useless-return': 'error',
      'no-var': 'error',
      'no-whitespace-before-property': 'warn',
      'nonblock-statement-body-position': 'error',
      'object-curly-spacing': 'warn',
      'object-shorthand': 'error',
      'operator-linebreak': ['warn', 'after'],
      'prefer-arrow-callback': 'error',
      'prefer-const': 'error',
      'prefer-numeric-literals': 'error',
      'prefer-promise-reject-errors': 'error',
      'quotes': ['error', 'single', {allowTemplateLiterals: true}],
      'radix': 'error',
      'rest-spread-spacing': 'warn',
      'semi': 'error',
      'semi-spacing': 'warn',
      'semi-style': 'warn',
      'space-before-blocks': 'warn',
      'space-before-function-paren': [
        'warn', {anonymous: 'never', named: 'never', asyncArrow: 'always'}
      ],
      'space-in-parens': 'warn',
      'space-infix-ops': 'warn',
      'space-unary-ops': ['warn', {words: true, nonwords: false}],
      'spaced-comment': 'warn',
      'strict': 'error',
      'switch-colon-spacing': 'warn',
      'template-curly-spacing': 'warn',
      'template-tag-spacing': 'warn',
      'unicode-bom': 'error',
      'yoda': 'error',

      // These (recommended) rules require access to the parser
      // which requires additional setup. Also it isn't supported
      // in TypeScript + Flat config environments yet.
      'import/namespace': 'off',
      'import/default': 'off',
      'import/no-named-as-default': 'off',
      'import/no-named-as-default-member': 'off'
    }
  }
];
